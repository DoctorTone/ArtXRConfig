/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF, Box } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Floor: THREE.Mesh;
    Cube: THREE.Mesh;
    Plane002: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
  };
};

export function Concrete(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./models/concrete.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        receiveShadow
        geometry={nodes.Floor.geometry}
        material={materials["Material.001"]}
        scale={1.977}
      />
      <mesh
        name="VR_room"
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials.Material}
        position={[0, 1.93, 0]}
        scale={[1.958, 1.936, 1.958]}
      />
      <mesh
        receiveShadow
        geometry={nodes.Plane002.geometry}
        material={materials["Material.003"]}
        position={[0, 3.866, 0]}
        scale={1.963}
      />
      <Box
        visible={false}
        name="collider0"
        args={[1, 4, 4]}
        position={[-2.2, 1.8, 0]}
      />
      <Box
        visible={false}
        name="collider1"
        args={[4, 4, 1]}
        position={[0, 1.8, -2]}
      />
      <Box
        visible={false}
        name="collider2"
        args={[1, 4, 4]}
        position={[2.2, 1.8, 0]}
      />
      <Box
        visible={false}
        name="collider3"
        args={[4, 4, 1]}
        position={[0, 1.8, 2]}
      />
    </group>
  );
}

useGLTF.preload("./models/concrete.glb");
